name: Archive Release Radar Playlist

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    # Run Fridays at 7:57
    - cron: "57 7 * * 5"

jobs:
  archive_release_radar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install Python deps
        run: pip install -r requirements.txt

      - name: Get playlist ID
        shell: bash
        env:
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_ACCESS_TOKEN: ${{ secrets.SPOTIFY_ACCESS_TOKEN }}
          SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}
        run: >
          echo "SPOTIFY_PLAYLIST_ID=$(
            python scripts/get-playlist-id.py "$SPOTIFY_CLIENT_ID" "$SPOTIFY_CLIENT_SECRET" "$SPOTIFY_ACCESS_TOKEN" "$SPOTIFY_REFRESH_TOKEN" 'Release Radar' 'Radar des sorties' 'Radar à nouveautés' 'Radar de Novedades' 'Radar de Novidades' 'Radar de novedades' 'موسيقتك الجديدة' 'Радар новинок' 'Radar premier' 'Uutuuskattaus' 'Zeneradar' '신곡 레이더' 'Nhạc mới phát hành'
          )" >> $GITHUB_ENV

      - name: Copy playlist
        shell: bash
        env:
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_ACCESS_TOKEN: ${{ secrets.SPOTIFY_ACCESS_TOKEN }}
          SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}
        run: >
          python scripts/copy-playlist.py
          "$SPOTIFY_CLIENT_ID" "$SPOTIFY_CLIENT_SECRET"
          "$SPOTIFY_ACCESS_TOKEN" "$SPOTIFY_REFRESH_TOKEN"
          "$SPOTIFY_PLAYLIST_ID" "RR - %b %e"
